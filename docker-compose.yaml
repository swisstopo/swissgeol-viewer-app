services:
  api:
    image: swissgeol-viewer-app/api:local
    build:
      context: ./api
      dockerfile: DockerfileDev
    init: true
    ports:
      - "8480:3000"
    volumes:
      - ./api:/app
      - api.cargo:/usr/local/cargo
      - api.target:/app/target
    depends_on:
      - db
      - minio
    env_file:
      - ./api/.env
      - .env

  ui:
    image: node:22
    init: true
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
    working_dir: /app
    command: ["sh", "-c", "npm install && npm run start"]
    depends_on:
      - api
      - abbreviator
    volumes:
      - ./ui:/app
      - ui.node_modules:/app/node_modules

  minio:
    image: minio/minio:latest
    command: server /data --console-address :9001
    init: true
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_BROWSER: "on"
      MINIO_SITE_REGION: ${S3_AWS_REGION}
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    env_file:
      - ./api/.env
      - .env

  abbreviator:
    image: ghcr.io/swisstopo/swissgeol-viewer-app-abbreviator:main
    platform: linux/amd64
    ports:
      - "8001:8080"
    environment:
      ID_LENGTH: 5
      DATABASE_URL: "sqlite:///storage/local.db"
      HOST_WHITELIST: "localhost"

  db:
    image: camptocamp/postgres:14-postgis-3
    platform: linux/amd64
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PGUSER}", "${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio:
  db:
  api.cargo:
  api.target:
  ui.node_modules: